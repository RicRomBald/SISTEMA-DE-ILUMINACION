#SISTEMA_DE_ILUMINACIÓN
#define LED_RED_PIN 12   // Pin para el componente rojo del LED RGB
#define LED_GREEN_PIN 13 // Pin para el componente verde del LED RGB
#define LED_BLUE_PIN 14  // Pin para el componente azul del LED RGB

// Definir los pines de los botones
#define PIN_BTN_1 15
#define PIN_BTN_2 2
#define PIN_BTN_3 4
#define PIN_BTN_4 16
#define PIN_BTN_5 17
#define PIN_BTN_6 5
#define PIN_BTN_7 18
#define PIN_BTN_8 19
#define PIN_BTN_9 3

// Pines para los relays
const int pinesReles[9] = {21, 1, 22, 23, 27, 26, 25, 32, 33};

// Definir los colores RGB correspondientes a cada botón
#define COLOR_1 0, 255, 255     // Rojo
#define COLOR_2 0, 150, 255     // Naranja
#define COLOR_3 0, 0, 255       // Amarillo
#define COLOR_4 255, 0, 0       // Celeste
#define COLOR_5 0, 0, 0         // Blanco
#define COLOR_6 255, 0, 255     // Verde
#define COLOR_7 128, 255, 128   // Morado
#define COLOR_8 255, 255, 0     // Azul
#define COLOR_9 191, 31, 47     // Turquesa

volatile int currentButton = 0;

void setup() {
  Serial.begin(9600);
  pinMode(LED_RED_PIN, OUTPUT);
  pinMode(LED_GREEN_PIN, OUTPUT);
  pinMode(LED_BLUE_PIN, OUTPUT);
  
  for (int i = 0; i < 9; i++) {
    pinMode(pinesReles[i], OUTPUT);
    digitalWrite(pinesReles[i], LOW); // Inicialmente apagar todos los relés
  }
  
  pinMode(PIN_BTN_1, INPUT_PULLUP);
  pinMode(PIN_BTN_2, INPUT_PULLUP);
  pinMode(PIN_BTN_3, INPUT_PULLUP);
  pinMode(PIN_BTN_4, INPUT_PULLUP);
  pinMode(PIN_BTN_5, INPUT_PULLUP);
  pinMode(PIN_BTN_6, INPUT_PULLUP);
  pinMode(PIN_BTN_7, INPUT_PULLUP);
  pinMode(PIN_BTN_8, INPUT_PULLUP);
  pinMode(PIN_BTN_9, INPUT_PULLUP);

  // Configurar las interrupciones para los botones
  attachInterrupt(digitalPinToInterrupt(PIN_BTN_1), buttonInterrupt, RISING);
  attachInterrupt(digitalPinToInterrupt(PIN_BTN_2), buttonInterrupt, RISING);
  attachInterrupt(digitalPinToInterrupt(PIN_BTN_3), buttonInterrupt, RISING);
  attachInterrupt(digitalPinToInterrupt(PIN_BTN_4), buttonInterrupt, RISING);
  attachInterrupt(digitalPinToInterrupt(PIN_BTN_5), buttonInterrupt, RISING);
  attachInterrupt(digitalPinToInterrupt(PIN_BTN_6), buttonInterrupt, RISING);
  attachInterrupt(digitalPinToInterrupt(PIN_BTN_7), buttonInterrupt, RISING);
  attachInterrupt(digitalPinToInterrupt(PIN_BTN_8), buttonInterrupt, RISING);
  attachInterrupt(digitalPinToInterrupt(PIN_BTN_9), buttonInterrupt, RISING);

  // Apagar el LED RGB
  analogWrite(LED_RED_PIN, 255);
  analogWrite(LED_GREEN_PIN, 255);
  analogWrite(LED_BLUE_PIN, 255);
}

void loop() {
  // No es necesario hacer nada en el bucle principal
  Serial.println(currentButton);
  delay(500);
}

void buttonInterrupt() {
  // Determinar qué botón generó la interrupción
  if (digitalRead(PIN_BTN_1) == LOW) {
    currentButton = 1;
  } else if (digitalRead(PIN_BTN_2) == LOW) {
    currentButton = 2;
  } else if (digitalRead(PIN_BTN_3) == LOW) {
    currentButton = 3;
  } else if (digitalRead(PIN_BTN_4) == LOW) {
    currentButton = 4;
  } else if (digitalRead(PIN_BTN_5) == LOW) {
    currentButton = 5;
  } else if (digitalRead(PIN_BTN_6) == LOW) {
    currentButton = 6;
  } else if (digitalRead(PIN_BTN_7) == LOW) {
    currentButton = 7;
  } else if (digitalRead(PIN_BTN_8) == LOW) {
    currentButton = 8;
  } else if (digitalRead(PIN_BTN_9) == LOW) {
    currentButton = 9;
  }

  // Activa el respectivo relay
  relay(currentButton);

  // Encender el LED RGB con el color correspondiente al botón presionado
  switch (currentButton) {
    case 1:
      setColor(COLOR_1);
      break;
    case 2:
      setColor(COLOR_2);
      break;
    case 3:
      setColor(COLOR_3);
      break;
    case 4:
      setColor(COLOR_4);
      break;
    case 5:
      setColor(COLOR_5);
      break;
    case 6:
      setColor(COLOR_6);
      break;
    case 7:
      setColor(COLOR_7);
      break;
    case 8:
      setColor(COLOR_8);
      break;
    case 9:
      setColor(COLOR_9);
      break;
  }

}

// Funcion que setea el color el led RGB
void setColor(int red, int green, int blue) {
  analogWrite(LED_RED_PIN, red);
  analogWrite(LED_GREEN_PIN, green);
  analogWrite(LED_BLUE_PIN, blue);
}

// Funcion que activa y desactiva los relays
void relay(int num) {
  for (int i = 0; i < 9; i++) {
    if ((i+1)==num) digitalWrite(pinesReles[i], HIGH);
    else digitalWrite(pinesReles[i], LOW);
  }
}
